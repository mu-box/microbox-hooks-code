#!/usr/bin/env ruby

# Fetch the deploy environment and live source code
#
# 1 - fetch deploy env
# 2 - fetch live source code

# hookit is installed as a bundled app, so we need bundler to load it for us
$:.unshift  '/opt/gonano/hookit/vendor/bundle'
require 'bundler/setup'

# load hookit/setup to bootstrap hookit and import the dsl
require 'hookit/setup'

# import some logic/helpers from lib/*.rb
include Nanobox::Engine
# require 'nanonox/logvac'

logger = Nanobox::Logvac.new(host: payload[:logvac_host], hostname: payload[:component][:uid], id: "#{payload[:component][:uid]}.#{payload[:member][:uid]}[fetch]")

# 1 - Download deploy environment
logger.puts("Retrieving deploy environment...")
directory "#{DATA_DIR}" do
  owner 'gonano'
  group 'gonano'
end

execute "fetch and extract deploy" do
  command <<-EOF
    curl \
      -k \
      -H "x-auth-token: #{payload[:warehouse_token]}" \
      https://#{payload[:warehouse]}:7410/blobs/deploy-#{payload[:build]}.tgz \
        | tar \
          -xzf \
          - \
          -C #{DATA_DIR}
  EOF
end

execute "ensure gonano owns data" do
  command "chown -R gonano:gonano #{DATA_DIR}"
end

# 2 - Download live code
logger.puts("Retrieving application...")
directory "#{APP_DIR}" do
  owner 'gonano'
  group 'gonano'
end

execute "fetch and extract app" do
  command <<-EOF
    curl \
      -k \
      -H "x-auth-token: #{payload[:warehouse_token]}" \
      https://#{payload[:warehouse]}:7410/blobs/app-#{payload[:build]}.tgz \
        | tar \
          -xzf \
          - \
          -C #{APP_DIR}
  EOF
end

execute "ensure gonano owns code" do
  command "chown -R gonano:gonano #{APP_DIR}"
end

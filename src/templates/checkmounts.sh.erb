#!/bin/bash

remount_nfs() {
  umount_nfs "${3}"
  mount_nfs "${1}" "${2}" "${3}"
}

mount_nfs() {
  # check a few things before trying to mount
  # Is the server pingable
  if ping -c 1 -W 1 ${1} &> /dev/null
  then
    # Is it listening on port 2049
    if nc -q 0 ${1} 2049 < /dev/null &> /dev/null
    then
      echo "Mounting ${1}:${2} to ${3}"
      mount -t nfs -o rw,intr,proto=tcp,vers=3,nolock "${1}:${2}" "${3}"
    fi
  fi
}

umount_nfs() {
  echo "unmounting ${1}"
  umount -f "${1}"
}

check_nfs_mount() {
  server=$(echo "${1}" | cut -d: -f1)
  server_path=$(echo "${1}" | cut -d: -f2)
  path=$(echo "${1}" | cut -d: -f3)
  # does it show up in the list of mounts?
  if grep "${server}:${server_path} ${path}" /proc/mounts &> /dev/null
  then
    if timeout 10 df "${path}"
    then
      output=$(timeout 10 df "${path}" 2>&1)
      if [[ "${output}" =~ "Stale file handle" ]]
      then
        echo "${server}:${server_path} looks stale"
        remount_nfs "${server}" "${server_path}" "${path}"
      fi
    else
      echo "${server}:${server_path} timed out while checking"
      remount_nfs "${server}" "${server_path}" "${path}"
    fi
  else
    echo "${server}:${server_path} not mounted to ${path}"
    mount_nfs "${server}" "${server_path}" "${path}"
  fi
}

nfs_mounts=(<%= nfs_mounts.join(" ") %>)

while :
do
  for i in ${nfs_mounts[@]}
  do
    check_nfs_mount "${i}"
  done
  sleep 30
done